# This is a basic workflow to help you get started with Actions

name: dotTEST Static Analysis

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  dotTEST-static-analysis:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # Depth set to 0 for highest performance
      - name: Checkout sources
        uses: actions/checkout@v3
        with: 
          fetch-depth: 0

      - name: Run dotTEST static analysis
        id: dottest_sa
        # You may pin to the exact commit or the version.
        # uses: tobyash86/run-dottest-analyzer-proto@1bc4be095189f455793afdb10b47127e06ae25ff
        uses: parasoft/run-dottest-analyzer@1.2.3
        with:
          # Path to working directory.
          installDir: c:\Program Files\Parasoft\dotTEST\2022.2
          testConfig: OWASP Top 10-2021
          property: 'scope.scontrol.files.filter.mode=branch;
            scope.scontrol.ref.branch=origin/main;
            scope.scontrol=true;
            scontrol.rep1.type=git;
            scontrol.rep1.git.url=${{ github.server_url }}/${{ github.repository }};
            scontrol.rep1.git.branch=${{github.branch}};
            scontrol.rep1.git.workspace=${GITHUB_WORKSPACE};
            scontrol.git.exec=C\:\\Program Files\\Git\\bin\\git.exe'
      
      # ---------------------------------------------------------------
      # Upload the findings into the GitHub code scanning alert section
      - name: Upload static results to GitHub
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: ${{ steps.dottest_sa.outputs.report }}
          
      # ---------------------------------------------------------------
      # Archive the findings reports as job artifact
      - name: Upload static analysis artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Report files
          path: ${{ steps.dottest_sa.outputs.reportDir }}/*.*